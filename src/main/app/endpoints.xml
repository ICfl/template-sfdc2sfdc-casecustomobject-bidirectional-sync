<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	version="EE-3.7.2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
 
    <flow name="triggerSyncFromAFlow"  processingStrategy="synchronous">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="${polling.frequency}" startDelay="1000"/>
            <watermark variable="lastQueryDateA" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
            <processor-chain doc:name="Processor Chain">
            	<expression-component doc:name="Lock processing to avoid two syncs occurring at the same time"><![CDATA[app.registry['PollSynchronizer'].lock();]]></expression-component>           
            	<sfdc:query config-ref="SalesforceA" query="dsql:SELECT Id,Description,Subject,LastModifiedDate,LastModifiedById,Origin,Priority,Status, ExtId__c,
 ContactId, Contact.FirstName, Contact.LastName, Contact.Email, AccountId, Account.Name 
 FROM Case 
 WHERE LastModifiedDate &gt; #[flowVars['lastQueryDateA']] AND LastModifiedById &lt;&gt; '${sfdc.a.integration.user.id}' ORDER BY LastModifiedDate ASC LIMIT 200" doc:name="Fetch cases from A"/> 
        	</processor-chain>
        </poll>
			
        <set-variable variableName="sourceSystem" value="A" doc:name="Set sourceSystem to 'A'"/>
        <batch:execute name="syncCasesToOrgBBatch" doc:name="Call syncCasesToOrgBBatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    
    <flow name="triggerSyncFromBFlow"  processingStrategy="synchronous">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="${polling.frequency}" startDelay="1000" />
            <watermark variable="lastQueryDateB" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
            <processor-chain doc:name="Processor Chain">
            	<expression-component doc:name="Lock processing to avoid two syncs occurring at the same time"><![CDATA[app.registry['PollSynchronizer'].lock();]]></expression-component>                
            	<sfdc:query config-ref="SalesforceB" query="dsql:SELECT Id,Description__c,Subject__c,LastModifiedDate,LastModifiedById,Origin__c,Priority__c,Status__c, CaseId__c,
 Contact__c, Contact__r.FirstName, Contact__r.LastName, Contact__r.Email, Account__c,Account__r.Name 
 FROM Case__c 
 WHERE LastModifiedDate &gt; #[flowVars['lastQueryDateB']] AND LastModifiedById &lt;&gt; '${sfdc.b.integration.user.id}' ORDER BY LastModifiedDate ASC LIMIT 200" doc:name="Fetch case__c objects from B"/>    
            </processor-chain>                        
        </poll>
        <set-variable variableName="sourceSystem" value="B" doc:name="Set sourceSystem to 'B'"/>
        <batch:execute name="syncCasesToOrgABatch" doc:name="Call syncCasesToOrgABatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
</mule>
